_ROOT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
SHELL:=/bin/bash

export RUBY_VERSION?=2.6
export RAILS_VERSION?=5.2.4.3
export DATABASE?=sqlite3
export CVE?=CVE-2020-15169
export RAILS_APP?=${_ROOT_DIR}/cves/${CVE}
export COMPOSE_DOCKER_CLI_BUILD=1
export DOCKER_BUILDKIT=1

default: help

help: #: Show help topics
	@grep "#:" Makefile* | grep -v "@grep" | sort | sed "s/\([A-Za-z_ -]*\):.*#\(.*\)/$$(tput setaf 3)\1$$(tput sgr0)\2/g"

down: #: Stop and remove containers, networks, images, and volumes
	-docker-compose down --remove-orphans

up: #: Create and start containers
	docker-compose up

init: down #: Initialize file system, containers, networks, images, and volumes
	[ -d "${RAILS_APP}" ] && rm -rf ${RAILS_APP} || echo "setting up new CVE"
	cp -R template ${RAILS_APP}
	@sed -i '' "s/gem 'rails', 'N.N.N'/gem 'rails', '${RAILS_VERSION}'/" ${RAILS_APP}/Gemfile
	@sed -i '' "s/CVE-NNNN-NNNN/${CVE}/" ${RAILS_APP}/docker-compose.yml
	docker-compose run web rails new . --force --skip-git --skip-bundle --no-deps --database=${DATABASE}
	@sed -i '' "s/.*gem 'rails'.*/gem 'rails', '${RAILS_VERSION}'/" ${RAILS_APP}/Gemfile
	@echo "gem 'brakeman'" >> ${RAILS_APP}/Gemfile
	@echo "gem 'bundle-audit'" >> ${RAILS_APP}/Gemfile
	@echo "gem 'ruby-debug-ide'" >> ${RAILS_APP}/Gemfile
	@echo "gem 'debase'" >> ${RAILS_APP}/Gemfile
	@echo "gem 'awesome_print'" >> ${RAILS_APP}/Gemfile

build: init #: Build the target image
	docker-compose build --no-cache \
	--build-arg RUBY_VERSION=${RUBY_VERSION} \
	--build-arg RAILS_VERSION=${RAILS_VERSION}

bundle: #: Run bundle install
	docker-compose run web bundle install

scaffold: #: Scaffold a basic user MVC
	# docker-compose run web bundle exec rails generate scaffold Users name:string title:string nickname:string
	docker-compose run web bundle exec rails generate migration AddStarSignToUsers star_sign:string

server: up #: Run the rails server

debug: #: Run the debugger
	docker-compose -f docker-compose.yml -f docker-compose.debug.yml up $(DETACH)

console: #: Run the rails console
	docker-compose run web bundle exec rails console

shell: #: Run a bash shell
	docker-compose exec web bash

create: #: Run db:create
	docker-compose run web bundle exec rake db:create

migrate: #: Run db:migrate
	docker-compose run web bundle exec rake db:migrate

reset: #: Run db:reset
	docker-compose run web bundle exec rake db:reset

psql: #: Run a psql shell
	docker-compose run postgres psql -U postgres app_development

brakeman: #: Run brakeman tests
	docker-compose run web bundle exec brakeman --color --rails5 --no-quiet --run-all-checks

bundle-audit: #: Run bundle-audit vulnerability tests
	docker-compose run web bundle exec bundle-audit

lab: build server #: Run the lab

buildkite:
	docker run -e BUILDKITE_AGENT_TOKEN="${BUILDKITE_AGENT_TOKEN}" buildkite/agent
